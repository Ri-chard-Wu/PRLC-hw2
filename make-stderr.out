hw2.cc: In function ‘double softshadow(vec3, vec3, float)’:
hw2.cc:161:31: error: no match for ‘operator*’ (operand types are ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} and ‘float’)
  161 |         float h = map(ro + rd * t);
      |                            ~~ ^ ~
      |                            |    |
      |                            |    float
      |                            vec3 {aka glm::vec<3, double, glm::packed_highp>}
In file included from /usr/include/c++/12.2.1/bits/this_thread_sleep.h:36,
                 from /usr/include/c++/12.2.1/thread:44,
                 from /usr/include/oneapi/tbb/detail/_machine.h:51,
                 from /usr/include/oneapi/tbb/detail/_utils.h:26,
                 from /usr/include/oneapi/tbb/detail/_range_common.h:21,
                 from /usr/include/oneapi/tbb/detail/_concurrent_unordered_base.h:24,
                 from /usr/include/oneapi/tbb/concurrent_unordered_map.h:21,
                 from /usr/include/tbb/concurrent_unordered_map.h:17,
                 from hw2.cc:12:
/usr/include/c++/12.2.1/bits/chrono.h:675:7: note: candidate: ‘template<class _Rep1, class _Period, class _Rep2> constexpr std::chrono::duration<std::chrono::__common_rep_t<_Rep1, _Rep2>, _Period> std::chrono::operator*(const duration<_Rep1, _Period1>&, const _Rep2&)’
  675 |       operator*(const duration<_Rep1, _Period>& __d, const _Rep2& __s)
      |       ^~~~~~~~
/usr/include/c++/12.2.1/bits/chrono.h:675:7: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const std::chrono::duration<_Rep1, _Period1>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/c++/12.2.1/bits/chrono.h:684:7: note: candidate: ‘template<class _Rep1, class _Rep2, class _Period> constexpr std::chrono::duration<std::chrono::__common_rep_t<_Rep2, _Rep1>, _Period> std::chrono::operator*(const _Rep1&, const duration<_Rep, _Period>&)’
  684 |       operator*(const _Rep1& __s, const duration<_Rep2, _Period>& __d)
      |       ^~~~~~~~
/usr/include/c++/12.2.1/bits/chrono.h:684:7: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const std::chrono::duration<_Rep, _Period>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_vec2.hpp:398,
                 from /usr/include/glm/ext/vector_bool2.hpp:5,
                 from /usr/include/glm/vec2.hpp:5,
                 from /usr/include/glm/glm.hpp:116,
                 from hw2.cc:8:
/usr/include/glm/detail/type_vec2.inl:557:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<2, T, Q> glm::operator*(const vec<2, T, Q>&, T)’
  557 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<2, T, Q> const& v, T scalar)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec2.inl:557:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘2’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec2.inl:565:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<2, T, Q> glm::operator*(const vec<2, T, Q>&, const vec<1, T, Q>&)’
  565 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<2, T, Q> const& v1, vec<1, T, Q> const& v2)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec2.inl:565:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘2’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec2.inl:573:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<2, T, Q> glm::operator*(T, const vec<2, T, Q>&)’
  573 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(T scalar, vec<2, T, Q> const& v)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec2.inl:573:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::vec<2, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec2.inl:581:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<2, T, Q> glm::operator*(const vec<1, T, Q>&, const vec<2, T, Q>&)’
  581 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<1, T, Q> const& v1, vec<2, T, Q> const& v2)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec2.inl:581:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘1’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec2.inl:589:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<2, T, Q> glm::operator*(const vec<2, T, Q>&, const vec<2, T, Q>&)’
  589 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<2, T, Q> operator*(vec<2, T, Q> const& v1, vec<2, T, Q> const& v2)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec2.inl:589:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘2’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_vec3.hpp:431,
                 from /usr/include/glm/ext/vector_bool3.hpp:5,
                 from /usr/include/glm/vec3.hpp:5,
                 from /usr/include/glm/glm.hpp:117:
/usr/include/glm/detail/type_vec3.inl:670:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<3, T, Q> glm::operator*(const vec<3, T, Q>&, T)’
  670 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v, T scalar)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec3.inl:670:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   deduced conflicting types for parameter ‘T’ (‘double’ and ‘float’)
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec3.inl:679:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<3, T, Q> glm::operator*(const vec<3, T, Q>&, const vec<1, T, Q>&)’
  679 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v, vec<1, T, Q> const& scalar)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec3.inl:679:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::vec<1, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec3.inl:688:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<3, T, Q> glm::operator*(T, const vec<3, T, Q>&)’
  688 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(T scalar, vec<3, T, Q> const& v)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec3.inl:688:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::vec<3, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec3.inl:697:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<3, T, Q> glm::operator*(const vec<1, T, Q>&, const vec<3, T, Q>&)’
  697 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<1, T, Q> const& scalar, vec<3, T, Q> const& v)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec3.inl:697:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘1’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec3.inl:706:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<3, T, Q> glm::operator*(const vec<3, T, Q>&, const vec<3, T, Q>&)’
  706 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<3, T, Q> operator*(vec<3, T, Q> const& v1, vec<3, T, Q> const& v2)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec3.inl:706:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::vec<3, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_vec4.hpp:504,
                 from /usr/include/glm/ext/vector_bool4.hpp:5,
                 from /usr/include/glm/vec4.hpp:5,
                 from /usr/include/glm/glm.hpp:118:
/usr/include/glm/detail/type_vec4.inl:864:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<4, T, Q> glm::operator*(const vec<4, T, Q>&, const T&)’
  864 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v, T const & scalar)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec4.inl:864:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘4’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec4.inl:870:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<4, T, Q> glm::operator*(const vec<4, T, Q>&, const vec<1, T, Q>&)’
  870 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v1, vec<1, T, Q> const& v2)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec4.inl:870:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘4’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec4.inl:876:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<4, T, Q> glm::operator*(T, const vec<4, T, Q>&)’
  876 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(T scalar, vec<4, T, Q> const& v)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec4.inl:876:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::vec<4, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec4.inl:882:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<4, T, Q> glm::operator*(const vec<1, T, Q>&, const vec<4, T, Q>&)’
  882 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<1, T, Q> const& v1, vec<4, T, Q> const& v2)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec4.inl:882:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘1’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec4.inl:888:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<4, T, Q> glm::operator*(const vec<4, T, Q>&, const vec<4, T, Q>&)’
  888 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<4, T, Q> operator*(vec<4, T, Q> const& v1, vec<4, T, Q> const& v2)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec4.inl:888:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘4’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_mat2x2.hpp:176,
                 from /usr/include/glm/ext/matrix_double2x2.hpp:5,
                 from /usr/include/glm/mat2x2.hpp:5,
                 from /usr/include/glm/glm.hpp:119:
/usr/include/glm/detail/type_mat2x2.inl:413:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 2, T, Q> glm::operator*(const mat<2, 2, T, Q>&, T)’
  413 |         GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(mat<2, 2, T, Q> const& m, T scalar)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x2.inl:413:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x2.inl:421:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 2, T, Q> glm::operator*(T, const mat<2, 2, T, Q>&)’
  421 |         GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(T scalar, mat<2, 2, T, Q> const& m)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x2.inl:421:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<2, 2, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x2.inl:429:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<2, 2, T, Q>::col_type glm::operator*(const mat<2, 2, T, Q>&, const typename mat<2, 2, T, Q>::row_type&)’
  429 |         GLM_FUNC_QUALIFIER typename mat<2, 2, T, Q>::col_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat2x2.inl:429:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x2.inl:441:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<2, 2, T, Q>::row_type glm::operator*(const typename mat<2, 2, T, Q>::col_type&, const mat<2, 2, T, Q>&)’
  441 |         GLM_FUNC_QUALIFIER typename mat<2, 2, T, Q>::row_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat2x2.inl:441:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<2, 2, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x2.inl:453:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 2, T, Q> glm::operator*(const mat<2, 2, T, Q>&, const mat<2, 2, T, Q>&)’
  453 |         GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(mat<2, 2, T, Q> const& m1, mat<2, 2, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x2.inl:453:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x2.inl:463:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 2, T, Q> glm::operator*(const mat<2, 2, T, Q>&, const mat<3, 2, T, Q>&)’
  463 |         GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(mat<2, 2, T, Q> const& m1, mat<3, 2, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x2.inl:463:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x2.inl:475:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 2, T, Q> glm::operator*(const mat<2, 2, T, Q>&, const mat<4, 2, T, Q>&)’
  475 |         GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(mat<2, 2, T, Q> const& m1, mat<4, 2, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x2.inl:475:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_mat2x3.hpp:158,
                 from /usr/include/glm/ext/matrix_double2x3.hpp:5,
                 from /usr/include/glm/mat2x3.hpp:5,
                 from /usr/include/glm/matrix.hpp:22,
                 from /usr/include/glm/detail/type_mat2x2.inl:1:
/usr/include/glm/detail/type_mat2x3.inl:383:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 3, T, Q> glm::operator*(const mat<2, 3, T, Q>&, T)’
  383 |         GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(mat<2, 3, T, Q> const& m, T scalar)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x3.inl:383:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x3.inl:391:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 3, T, Q> glm::operator*(T, const mat<2, 3, T, Q>&)’
  391 |         GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(T scalar, mat<2, 3, T, Q> const& m)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x3.inl:391:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<2, 3, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x3.inl:399:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<2, 3, T, Q>::col_type glm::operator*(const mat<2, 3, T, Q>&, const typename mat<2, 3, T, Q>::row_type&)’
  399 |         GLM_FUNC_QUALIFIER typename mat<2, 3, T, Q>::col_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat2x3.inl:399:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x3.inl:411:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<2, 3, T, Q>::row_type glm::operator*(const typename mat<2, 3, T, Q>::col_type&, const mat<2, 3, T, Q>&)’
  411 |         GLM_FUNC_QUALIFIER typename mat<2, 3, T, Q>::row_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat2x3.inl:411:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<2, 3, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x3.inl:422:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 3, T, Q> glm::operator*(const mat<2, 3, T, Q>&, const mat<2, 2, T, Q>&)’
  422 |         GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(mat<2, 3, T, Q> const& m1, mat<2, 2, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x3.inl:422:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x3.inl:434:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 3, T, Q> glm::operator*(const mat<2, 3, T, Q>&, const mat<3, 2, T, Q>&)’
  434 |         GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(mat<2, 3, T, Q> const& m1, mat<3, 2, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x3.inl:434:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x3.inl:464:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 3, T, Q> glm::operator*(const mat<2, 3, T, Q>&, const mat<4, 2, T, Q>&)’
  464 |         GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(mat<2, 3, T, Q> const& m1, mat<4, 2, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x3.inl:464:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_mat2x4.hpp:160,
                 from /usr/include/glm/ext/matrix_double2x4.hpp:5,
                 from /usr/include/glm/mat2x4.hpp:5,
                 from /usr/include/glm/matrix.hpp:23:
/usr/include/glm/detail/type_mat2x4.inl:385:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 4, T, Q> glm::operator*(const mat<2, 4, T, Q>&, T)’
  385 |         GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(mat<2, 4, T, Q> const& m, T scalar)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x4.inl:385:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x4.inl:393:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 4, T, Q> glm::operator*(T, const mat<2, 4, T, Q>&)’
  393 |         GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(T scalar, mat<2, 4, T, Q> const& m)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x4.inl:393:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<2, 4, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x4.inl:401:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<2, 4, T, Q>::col_type glm::operator*(const mat<2, 4, T, Q>&, const typename mat<2, 4, T, Q>::row_type&)’
  401 |         GLM_FUNC_QUALIFIER typename mat<2, 4, T, Q>::col_type operator*(mat<2, 4, T, Q> const& m, typename mat<2, 4, T, Q>::row_type const& v)
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat2x4.inl:401:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x4.inl:411:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<2, 4, T, Q>::row_type glm::operator*(const typename mat<2, 4, T, Q>::col_type&, const mat<2, 4, T, Q>&)’
  411 |         GLM_FUNC_QUALIFIER typename mat<2, 4, T, Q>::row_type operator*(typename mat<2, 4, T, Q>::col_type const& v, mat<2, 4, T, Q> const& m)
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat2x4.inl:411:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<2, 4, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x4.inl:419:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 4, T, Q> glm::operator*(const mat<2, 4, T, Q>&, const mat<4, 2, T, Q>&)’
  419 |         GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(mat<2, 4, T, Q> const& m1, mat<4, 2, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x4.inl:419:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x4.inl:460:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 4, T, Q> glm::operator*(const mat<2, 4, T, Q>&, const mat<2, 2, T, Q>&)’
  460 |         GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(mat<2, 4, T, Q> const& m1, mat<2, 2, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x4.inl:460:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat2x4.inl:474:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 4, T, Q> glm::operator*(const mat<2, 4, T, Q>&, const mat<3, 2, T, Q>&)’
  474 |         GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(mat<2, 4, T, Q> const& m1, mat<3, 2, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat2x4.inl:474:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<2, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_mat3x2.hpp:166,
                 from /usr/include/glm/ext/matrix_double3x2.hpp:5,
                 from /usr/include/glm/mat3x2.hpp:5,
                 from /usr/include/glm/matrix.hpp:24:
/usr/include/glm/detail/type_mat3x2.inl:416:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 2, T, Q> glm::operator*(const mat<3, 2, T, Q>&, T)’
  416 |         GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(mat<3, 2, T, Q> const& m, T scalar)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x2.inl:416:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x2.inl:425:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 2, T, Q> glm::operator*(T, const mat<3, 2, T, Q>&)’
  425 |         GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(T scalar, mat<3, 2, T, Q> const& m)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x2.inl:425:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<3, 2, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x2.inl:434:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<3, 2, T, Q>::col_type glm::operator*(const mat<3, 2, T, Q>&, const typename mat<3, 2, T, Q>::row_type&)’
  434 |         GLM_FUNC_QUALIFIER typename mat<3, 2, T, Q>::col_type operator*(mat<3, 2, T, Q> const& m, typename mat<3, 2, T, Q>::row_type const& v)
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat3x2.inl:434:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x2.inl:442:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<3, 2, T, Q>::row_type glm::operator*(const typename mat<3, 2, T, Q>::col_type&, const mat<3, 2, T, Q>&)’
  442 |         GLM_FUNC_QUALIFIER typename mat<3, 2, T, Q>::row_type operator*(typename mat<3, 2, T, Q>::col_type const& v, mat<3, 2, T, Q> const& m)
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat3x2.inl:442:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<3, 2, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x2.inl:451:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 2, T, Q> glm::operator*(const mat<3, 2, T, Q>&, const mat<2, 3, T, Q>&)’
  451 |         GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(mat<3, 2, T, Q> const& m1, mat<2, 3, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x2.inl:451:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x2.inl:476:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 2, T, Q> glm::operator*(const mat<3, 2, T, Q>&, const mat<3, 3, T, Q>&)’
  476 |         GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(mat<3, 2, T, Q> const& m1, mat<3, 3, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x2.inl:476:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x2.inl:488:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 2, T, Q> glm::operator*(const mat<3, 2, T, Q>&, const mat<4, 3, T, Q>&)’
  488 |         GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(mat<3, 2, T, Q> const& m1, mat<4, 3, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x2.inl:488:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_mat3x3.hpp:183,
                 from /usr/include/glm/ext/matrix_double3x3.hpp:5,
                 from /usr/include/glm/mat3x3.hpp:5,
                 from /usr/include/glm/matrix.hpp:25:
/usr/include/glm/detail/type_mat3x3.inl:450:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 3, T, Q> glm::operator*(const mat<3, 3, T, Q>&, T)’
  450 |         GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(mat<3, 3, T, Q> const& m, T scalar)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x3.inl:450:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x3.inl:459:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 3, T, Q> glm::operator*(T, const mat<3, 3, T, Q>&)’
  459 |         GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(T scalar, mat<3, 3, T, Q> const& m)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x3.inl:459:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<3, 3, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x3.inl:468:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<3, 3, T, Q>::col_type glm::operator*(const mat<3, 3, T, Q>&, const typename mat<3, 3, T, Q>::row_type&)’
  468 |         GLM_FUNC_QUALIFIER typename mat<3, 3, T, Q>::col_type operator*(mat<3, 3, T, Q> const& m, typename mat<3, 3, T, Q>::row_type const& v)
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat3x3.inl:468:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x3.inl:477:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<3, 3, T, Q>::row_type glm::operator*(const typename mat<3, 3, T, Q>::col_type&, const mat<3, 3, T, Q>&)’
  477 |         GLM_FUNC_QUALIFIER typename mat<3, 3, T, Q>::row_type operator*(typename mat<3, 3, T, Q>::col_type const& v, mat<3, 3, T, Q> const& m)
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat3x3.inl:477:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<3, 3, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x3.inl:486:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 3, T, Q> glm::operator*(const mat<3, 3, T, Q>&, const mat<3, 3, T, Q>&)’
  486 |         GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(mat<3, 3, T, Q> const& m1, mat<3, 3, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x3.inl:486:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x3.inl:522:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 3, T, Q> glm::operator*(const mat<3, 3, T, Q>&, const mat<2, 3, T, Q>&)’
  522 |         GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(mat<3, 3, T, Q> const& m1, mat<2, 3, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x3.inl:522:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x3.inl:534:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 3, T, Q> glm::operator*(const mat<3, 3, T, Q>&, const mat<4, 3, T, Q>&)’
  534 |         GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(mat<3, 3, T, Q> const& m1, mat<4, 3, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x3.inl:534:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_mat3x4.hpp:165,
                 from /usr/include/glm/ext/matrix_double3x4.hpp:5,
                 from /usr/include/glm/mat3x4.hpp:5,
                 from /usr/include/glm/matrix.hpp:26:
/usr/include/glm/detail/type_mat3x4.inl:422:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 4, T, Q> glm::operator*(const mat<3, 4, T, Q>&, T)’
  422 |         GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(mat<3, 4, T, Q> const& m, T scalar)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x4.inl:422:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x4.inl:431:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 4, T, Q> glm::operator*(T, const mat<3, 4, T, Q>&)’
  431 |         GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(T scalar, mat<3, 4, T, Q> const& m)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x4.inl:431:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<3, 4, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x4.inl:440:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<3, 4, T, Q>::col_type glm::operator*(const mat<3, 4, T, Q>&, const typename mat<3, 4, T, Q>::row_type&)’
  440 |         GLM_FUNC_QUALIFIER typename mat<3, 4, T, Q>::col_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat3x4.inl:440:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x4.inl:454:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<3, 4, T, Q>::row_type glm::operator*(const typename mat<3, 4, T, Q>::col_type&, const mat<3, 4, T, Q>&)’
  454 |         GLM_FUNC_QUALIFIER typename mat<3, 4, T, Q>::row_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat3x4.inl:454:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<3, 4, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x4.inl:467:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 4, T, Q> glm::operator*(const mat<3, 4, T, Q>&, const mat<4, 3, T, Q>&)’
  467 |         GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(mat<3, 4, T, Q> const& m1, mat<4, 3, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x4.inl:467:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x4.inl:516:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 4, T, Q> glm::operator*(const mat<3, 4, T, Q>&, const mat<2, 3, T, Q>&)’
  516 |         GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(mat<3, 4, T, Q> const& m1, mat<2, 3, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x4.inl:516:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat3x4.inl:530:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 4, T, Q> glm::operator*(const mat<3, 4, T, Q>&, const mat<3, 3, T, Q>&)’
  530 |         GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(mat<3, 4, T, Q> const& m1, mat<3, 3, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat3x4.inl:530:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<3, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_mat4x2.hpp:170,
                 from /usr/include/glm/ext/matrix_double4x2.hpp:5,
                 from /usr/include/glm/mat4x2.hpp:5,
                 from /usr/include/glm/matrix.hpp:27:
/usr/include/glm/detail/type_mat4x2.inl:449:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 2, T, Q> glm::operator*(const mat<4, 2, T, Q>&, T)’
  449 |         GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(mat<4, 2, T, Q> const& m, T scalar)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x2.inl:449:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x2.inl:459:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 2, T, Q> glm::operator*(T, const mat<4, 2, T, Q>&)’
  459 |         GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(T scalar, mat<4, 2, T, Q> const& m)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x2.inl:459:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<4, 2, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x2.inl:469:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<4, 2, T, Q>::col_type glm::operator*(const mat<4, 2, T, Q>&, const typename mat<4, 2, T, Q>::row_type&)’
  469 |         GLM_FUNC_QUALIFIER typename mat<4, 2, T, Q>::col_type operator*(mat<4, 2, T, Q> const& m, typename mat<4, 2, T, Q>::row_type const& v)
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat4x2.inl:469:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x2.inl:477:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<4, 2, T, Q>::row_type glm::operator*(const typename mat<4, 2, T, Q>::col_type&, const mat<4, 2, T, Q>&)’
  477 |         GLM_FUNC_QUALIFIER typename mat<4, 2, T, Q>::row_type operator*(typename mat<4, 2, T, Q>::col_type const& v, mat<4, 2, T, Q> const& m)
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat4x2.inl:477:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<4, 2, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x2.inl:487:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 2, T, Q> glm::operator*(const mat<4, 2, T, Q>&, const mat<2, 4, T, Q>&)’
  487 |         GLM_FUNC_QUALIFIER mat<2, 2, T, Q> operator*(mat<4, 2, T, Q> const& m1, mat<2, 4, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x2.inl:487:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x2.inl:516:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 2, T, Q> glm::operator*(const mat<4, 2, T, Q>&, const mat<3, 4, T, Q>&)’
  516 |         GLM_FUNC_QUALIFIER mat<3, 2, T, Q> operator*(mat<4, 2, T, Q> const& m1, mat<3, 4, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x2.inl:516:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x2.inl:528:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 2, T, Q> glm::operator*(const mat<4, 2, T, Q>&, const mat<4, 4, T, Q>&)’
  528 |         GLM_FUNC_QUALIFIER mat<4, 2, T, Q> operator*(mat<4, 2, T, Q> const& m1, mat<4, 4, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x2.inl:528:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 2, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_mat4x3.hpp:170,
                 from /usr/include/glm/ext/matrix_double4x3.hpp:5,
                 from /usr/include/glm/mat4x3.hpp:5,
                 from /usr/include/glm/matrix.hpp:28:
/usr/include/glm/detail/type_mat4x3.inl:449:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 3, T, Q> glm::operator*(const mat<4, 3, T, Q>&, const T&)’
  449 |         GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(mat<4, 3, T, Q> const& m, T const& s)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x3.inl:449:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x3.inl:459:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 3, T, Q> glm::operator*(const T&, const mat<4, 3, T, Q>&)’
  459 |         GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(T const& s, mat<4, 3, T, Q> const& m)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x3.inl:459:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<4, 3, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x3.inl:469:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<4, 3, T, Q>::col_type glm::operator*(const mat<4, 3, T, Q>&, const typename mat<4, 3, T, Q>::row_type&)’
  469 |         GLM_FUNC_QUALIFIER typename mat<4, 3, T, Q>::col_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat4x3.inl:469:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x3.inl:481:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<4, 3, T, Q>::row_type glm::operator*(const typename mat<4, 3, T, Q>::col_type&, const mat<4, 3, T, Q>&)’
  481 |         GLM_FUNC_QUALIFIER typename mat<4, 3, T, Q>::row_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat4x3.inl:481:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<4, 3, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x3.inl:494:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 3, T, Q> glm::operator*(const mat<4, 3, T, Q>&, const mat<2, 4, T, Q>&)’
  494 |         GLM_FUNC_QUALIFIER mat<2, 3, T, Q> operator*(mat<4, 3, T, Q> const& m1, mat<2, 4, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x3.inl:494:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x3.inl:506:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 3, T, Q> glm::operator*(const mat<4, 3, T, Q>&, const mat<3, 4, T, Q>&)’
  506 |         GLM_FUNC_QUALIFIER mat<3, 3, T, Q> operator*(mat<4, 3, T, Q> const& m1, mat<3, 4, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x3.inl:506:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x3.inl:548:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 3, T, Q> glm::operator*(const mat<4, 3, T, Q>&, const mat<4, 4, T, Q>&)’
  548 |         GLM_FUNC_QUALIFIER mat<4, 3, T, Q> operator*(mat<4, 3, T, Q> const& m1, mat<4, 4, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x3.inl:548:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 3, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_mat4x4.hpp:188,
                 from /usr/include/glm/ext/matrix_double4x4.hpp:5,
                 from /usr/include/glm/mat4x4.hpp:5,
                 from /usr/include/glm/matrix.hpp:29:
/usr/include/glm/detail/type_mat4x4.inl:516:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 4, T, Q> glm::operator*(const mat<4, 4, T, Q>&, const T&)’
  516 |         GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(mat<4, 4, T, Q> const& m, T const  & s)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x4.inl:516:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x4.inl:526:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 4, T, Q> glm::operator*(const T&, const mat<4, 4, T, Q>&)’
  526 |         GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(T const& s, mat<4, 4, T, Q> const& m)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x4.inl:526:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<4, 4, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x4.inl:536:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<4, 4, T, Q>::col_type glm::operator*(const mat<4, 4, T, Q>&, const typename mat<4, 4, T, Q>::row_type&)’
  536 |         GLM_FUNC_QUALIFIER typename mat<4, 4, T, Q>::col_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat4x4.inl:536:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x4.inl:584:63: note: candidate: ‘template<class T, glm::qualifier Q> typename glm::mat<4, 4, T, Q>::row_type glm::operator*(const typename mat<4, 4, T, Q>::col_type&, const mat<4, 4, T, Q>&)’
  584 |         GLM_FUNC_QUALIFIER typename mat<4, 4, T, Q>::row_type operator*
      |                                                               ^~~~~~~~
/usr/include/glm/detail/type_mat4x4.inl:584:63: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::mat<4, 4, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x4.inl:598:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<2, 4, T, Q> glm::operator*(const mat<4, 4, T, Q>&, const mat<2, 4, T, Q>&)’
  598 |         GLM_FUNC_QUALIFIER mat<2, 4, T, Q> operator*(mat<4, 4, T, Q> const& m1, mat<2, 4, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x4.inl:598:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x4.inl:612:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<3, 4, T, Q> glm::operator*(const mat<4, 4, T, Q>&, const mat<3, 4, T, Q>&)’
  612 |         GLM_FUNC_QUALIFIER mat<3, 4, T, Q> operator*(mat<4, 4, T, Q> const& m1, mat<3, 4, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x4.inl:612:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_mat4x4.inl:630:44: note: candidate: ‘template<class T, glm::qualifier Q> glm::mat<4, 4, T, Q> glm::operator*(const mat<4, 4, T, Q>&, const mat<4, 4, T, Q>&)’
  630 |         GLM_FUNC_QUALIFIER mat<4, 4, T, Q> operator*(mat<4, 4, T, Q> const& m1, mat<4, 4, T, Q> const& m2)
      |                                            ^~~~~~~~
/usr/include/glm/detail/type_mat4x4.inl:630:44: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   ‘vec3’ {aka ‘glm::vec<3, double, glm::packed_highp>’} is not derived from ‘const glm::mat<4, 4, T, Q>’
  161 |         float h = map(ro + rd * t);
      |                                 ^
In file included from /usr/include/glm/detail/type_vec1.hpp:307,
                 from /usr/include/glm/exponential.hpp:17,
                 from /usr/include/glm/detail/func_geometric.inl:1,
                 from /usr/include/glm/geometric.hpp:116,
                 from /usr/include/glm/detail/func_matrix.inl:1,
                 from /usr/include/glm/matrix.hpp:161:
/usr/include/glm/detail/type_vec1.inl:350:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<1, T, Q> glm::operator*(const vec<1, T, Q>&, T)’
  350 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator*(vec<1, T, Q> const& v, T scalar)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec1.inl:350:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘1’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec1.inl:357:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<1, T, Q> glm::operator*(T, const vec<1, T, Q>&)’
  357 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator*(T scalar, vec<1, T, Q> const& v)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec1.inl:357:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   mismatched types ‘const glm::vec<1, T, Q>’ and ‘float’
  161 |         float h = map(ro + rd * t);
      |                                 ^
/usr/include/glm/detail/type_vec1.inl:364:55: note: candidate: ‘template<class T, glm::qualifier Q> constexpr glm::vec<1, T, Q> glm::operator*(const vec<1, T, Q>&, const vec<1, T, Q>&)’
  364 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<1, T, Q> operator*(vec<1, T, Q> const& v1, vec<1, T, Q> const& v2)
      |                                                       ^~~~~~~~
/usr/include/glm/detail/type_vec1.inl:364:55: note:   template argument deduction/substitution failed:
hw2.cc:161:33: note:   template argument ‘3’ does not match ‘1’
  161 |         float h = map(ro + rd * t);
      |                                 ^
hw2.cc:162:23: error: no matching function for call to ‘min(double&, float)’
  162 |         res = glm::min(res, k * h / t);
      |               ~~~~~~~~^~~~~~~~~~~~~~~~
In file included from /usr/include/glm/common.hpp:538,
                 from /usr/include/glm/detail/func_geometric.inl:2:
/usr/include/glm/detail/func_common.inl:17:50: note: candidate: ‘template<class genType> constexpr genType glm::min(genType, genType)’
   17 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType min(genType x, genType y)
      |                                                  ^~~
/usr/include/glm/detail/func_common.inl:17:50: note:   template argument deduction/substitution failed:
hw2.cc:162:23: note:   deduced conflicting types for parameter ‘genType’ (‘double’ and ‘float’)
  162 |         res = glm::min(res, k * h / t);
      |               ~~~~~~~~^~~~~~~~~~~~~~~~
/usr/include/glm/detail/func_common.inl:477:55: note: candidate: ‘template<int L, class T, glm::qualifier Q> constexpr glm::vec<L, T, Q> glm::min(const vec<L, T, Q>&, T)’
  477 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> min(vec<L, T, Q> const& a, T b)
      |                                                       ^~~
/usr/include/glm/detail/func_common.inl:477:55: note:   template argument deduction/substitution failed:
hw2.cc:162:23: note:   mismatched types ‘const glm::vec<L, T, Q>’ and ‘double’
  162 |         res = glm::min(res, k * h / t);
      |               ~~~~~~~~^~~~~~~~~~~~~~~~
/usr/include/glm/detail/func_common.inl:484:55: note: candidate: ‘template<int L, class T, glm::qualifier Q> constexpr glm::vec<L, T, Q> glm::min(const vec<L, T, Q>&, const vec<L, T, Q>&)’
  484 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> min(vec<L, T, Q> const& a, vec<L, T, Q> const& b)
      |                                                       ^~~
/usr/include/glm/detail/func_common.inl:484:55: note:   template argument deduction/substitution failed:
hw2.cc:162:23: note:   mismatched types ‘const glm::vec<L, T, Q>’ and ‘double’
  162 |         res = glm::min(res, k * h / t);
      |               ~~~~~~~~^~~~~~~~~~~~~~~~
hw2.cc:164:24: error: no matching function for call to ‘clamp(float&, double, double&)’
  164 |         t += glm::clamp(h, .001, step_limiter);  // move ray
      |              ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/glm/detail/func_common.inl:505:50: note: candidate: ‘template<class genType> constexpr genType glm::clamp(genType, genType, genType)’
  505 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR genType clamp(genType x, genType minVal, genType maxVal)
      |                                                  ^~~~~
/usr/include/glm/detail/func_common.inl:505:50: note:   template argument deduction/substitution failed:
hw2.cc:164:24: note:   deduced conflicting types for parameter ‘genType’ (‘float’ and ‘double’)
  164 |         t += glm::clamp(h, .001, step_limiter);  // move ray
      |              ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/glm/detail/func_common.inl:512:55: note: candidate: ‘template<int L, class T, glm::qualifier Q> constexpr glm::vec<L, T, Q> glm::clamp(const vec<L, T, Q>&, T, T)’
  512 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> clamp(vec<L, T, Q> const& x, T minVal, T maxVal)
      |                                                       ^~~~~
/usr/include/glm/detail/func_common.inl:512:55: note:   template argument deduction/substitution failed:
hw2.cc:164:24: note:   mismatched types ‘const glm::vec<L, T, Q>’ and ‘float’
  164 |         t += glm::clamp(h, .001, step_limiter);  // move ray
      |              ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
/usr/include/glm/detail/func_common.inl:519:55: note: candidate: ‘template<int L, class T, glm::qualifier Q> constexpr glm::vec<L, T, Q> glm::clamp(const vec<L, T, Q>&, const vec<L, T, Q>&, const vec<L, T, Q>&)’
  519 |         GLM_FUNC_QUALIFIER GLM_CONSTEXPR vec<L, T, Q> clamp(vec<L, T, Q> const& x, vec<L, T, Q> const& minVal, vec<L, T, Q> const& maxVal)
      |                                                       ^~~~~
/usr/include/glm/detail/func_common.inl:519:55: note:   template argument deduction/substitution failed:
hw2.cc:164:24: note:   mismatched types ‘const glm::vec<L, T, Q>’ and ‘float’
  164 |         t += glm::clamp(h, .001, step_limiter);  // move ray
      |              ~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~
make: *** [Makefile:13: hw2] Error 1
